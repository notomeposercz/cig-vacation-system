{layout '../@layout.latte'}

{block title}Administrace - Správa uživatelů{/block}

{block content}
    <h1>Správa uživatelů</h1>
    <p>Zde můžete spravovat uživatele a jejich nastavení dovolené pro rok {$currentYear}.</p>

    <div class="admin-users-container">
        <table class="table">
            <thead>
                <tr>
                    <th>Jméno</th>
                    <th>E-mail</th>
                    <th>Role</th>
                    <th>Nárok na dovolenou</th>
                    <th>Přenos z min. roku</th>
                    <th>Vyčerpáno</th>
                    <th>Zbývá</th>
                    <th>Akce</th>
                </tr>
            </thead>
            <tbody>
                <tr n:foreach="$users as $userItem">
                    {var $settings = $userItem->related('vacation_settings', 'user_id')->where('year', $currentYear)->fetch()}
                    {var $totalDays = $settings ? $settings->total_days : 0}
                    {var $carriedDays = $settings ? $settings->carried_days : 0}
                    {var $daysTaken = 0}
                    
                    {* Výpočet vyčerpaných dnů *}
                    {foreach $userItem->related('vacation_requests', 'user_id')->where('status', 'approved')->where('YEAR(start_date)', $currentYear) as $req}
                        {php $daysTaken += $req->calculated_duration_days}
                    {/foreach}
                    
                    {var $remainingDays = ($totalDays + $carriedDays) - $daysTaken}
                    
                    <td>{$userItem->first_name} {$userItem->last_name}</td>
                    <td>{$userItem->email}</td>
                    <td>{$userItem->role|firstUpper}</td>
                    <td>{$totalDays|number:1,',',' '}</td>
                    <td>{$carriedDays|number:1,',',' '}</td>
                    <td>{$daysTaken|number:1,',',' '}</td>
                    <td class="{if $remainingDays < 0}text-danger{elseif $remainingDays < 5}text-warning{else}text-success{/if}">
                        {$remainingDays|number:1,',',' '}
                    </td>
                    <td>
                        <a href="#" class="btn btn-primary btn-sm" onclick="openSettingsModal('{$userItem->id}', '{$userItem->first_name} {$userItem->last_name}')">
    Nastavení dovolené
</a>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    {* Modální okno pro nastavení dovolené *}
<div id="settingsModal" class="modal">
    <div class="modal-content">
        <span class="close-button" id="modalCloseButton">&times;</span>
        <h2 id="modalTitle">Nastavení dovolené</h2>
        
        <div id="settingsForm">
            <form id="vacationSettingsForm" onsubmit="saveSettings(event)">
                <input type="hidden" id="settings_user_id" name="user_id">
                <input type="hidden" id="settings_year" name="year">
                
                <div class="form-group">
                    <label for="settings_total_days">Nárok na dovolenou (dny):</label>
                    <input type="number" id="settings_total_days" name="total_days" class="form-control" required step="0.5" min="0" max="100">
                </div>
                
                <div class="form-group">
                    <label for="settings_carried_days">Převedeno z minulého roku (dny):</label>
                    <input type="number" id="settings_carried_days" name="carried_days" class="form-control" required step="0.5" min="0" max="50">
                </div>
                
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">Uložit nastavení</button>
                </div>
            </form>
        </div>
    </div>
</div>

{block scripts}
    {* Skripty pro správu uživatelů *}
    <script n:syntax="off">
        // Funkce pro zavření modálního okna
        function closeModal() {
            console.log('Closing modal');
            document.getElementById('settingsModal').style.display = 'none';
        }
        
        // Funkce pro otevření modálního okna
        function openSettingsModal(userId, userName) {
            console.log('openSettingsModal called with:', userId, userName);
            
            // Odstraníme uvozovky z userName pro zobrazení v titulku
            const cleanUserName = userName.replace(/[""]/g, '');
            
            // Nastavení titulku modálního okna bez uvozovek
            document.getElementById('modalTitle').innerText = `Nastavení dovolené: ${cleanUserName}`;
            
            // Zobrazení modálního okna
            document.getElementById('settingsModal').style.display = 'block';
            
            // Načtení dat z API
            console.log('Sending fetch request for userId:', userId);
            fetch(window.location.pathname + '?do=editSettings', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: new URLSearchParams({ userId: userId })
            })
            .then(response => {
                console.log('Response status:', response.status);
                return response.json();
            })
            .then(data => {
                console.log('Received data:', data);
                
                if (data.error) {
                    alert(data.error);
                    return;
                }
                
                // Naplnění formuláře daty
                document.getElementById('settings_user_id').value = data.userId;
                document.getElementById('settings_year').value = data.year;
                document.getElementById('settings_total_days').value = data.totalDays;
                document.getElementById('settings_carried_days').value = data.carriedDays;
            })
            .catch(error => {
                console.error('Chyba při načítání dat:', error);
                alert('Nepodařilo se načíst formulář. Zkuste to prosím znovu.');
            });
        }
        
        // Funkce pro uložení nastavení
        function saveSettings(event) {
            event.preventDefault();
            console.log('saveSettings called');
            
            const form = document.getElementById('vacationSettingsForm');
            const formData = new FormData(form);
            
            // Získáme jméno uživatele pro flash message
            const userName = document.getElementById('modalTitle').innerText
                .replace('Nastavení dovolené: ', '')
                .replace(/[""]/g, '');
            const totalDays = document.getElementById('settings_total_days').value;
            const carriedDays = document.getElementById('settings_carried_days').value;
            
            fetch(window.location.pathname + '?do=saveSettings', {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: formData
            })
            .then(response => {
                console.log('Response status:', response.status);
                return response.text();
            })
            .then(text => {
                console.log('Raw response:', text);
                try {
                    return JSON.parse(text);
                } catch (e) {
                    console.error('Failed to parse JSON:', e);
                    throw new Error('Server returned invalid JSON');
                }
            })
            .then(data => {
                console.log('Parsed data:', data);
                
                if (data.status === 'success') {
                    // Explicitně zavřeme modální okno
                    closeModal();
                    
                    // Přesměrujeme s parametry pro flash message
                    window.location.href = window.location.pathname + '?userUpdated=' + encodeURIComponent(userName) + 
                        '&totalDays=' + encodeURIComponent(totalDays) + 
                        '&carriedDays=' + encodeURIComponent(carriedDays);
                } else {
                    alert(data.message || 'Neznámá chyba');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Nepodařilo se uložit nastavení. Zkuste to prosím znovu.');
            });
        }
        
        // Nastavení event listenerů po načtení DOM
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Setting up modal events');
            
            // Přidání event listeneru na křížek
            const closeButton = document.querySelector('#settingsModal .close-button');
            if (closeButton) {
                console.log('Close button found, adding event listener');
                closeButton.addEventListener('click', function() {
                    closeModal();
                });
            } else {
                console.error('Close button not found');
            }
            
            // Zavření modálního okna kliknutím mimo obsah
            window.addEventListener('click', function(event) {
                const modal = document.getElementById('settingsModal');
                if (event.target === modal) {
                    closeModal();
                }
            });
        });
    </script>
{/block}